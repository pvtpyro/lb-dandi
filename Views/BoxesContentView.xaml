<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:next="clr-namespace:Unbroken.LaunchBox.Windows.Desktop;assembly=LaunchBox"
    xmlns:cal="http://www.caliburnproject.org"
    xmlns:windows="clr-namespace:Unbroken.LaunchBox.Windows;assembly=Unbroken.LaunchBox.Windows"
    mc:Ignorable="d" 
    d:DesignHeight="300"
    d:DesignWidth="300"
    Focusable="False"
    FontFamily="Play"
    FontSize="{Binding FontSize}"
    FontWeight="{Binding FontWeight}"
    FontStyle="{Binding FontStyle}">
    <UserControl.Resources>
        <windows:ImageToSourceConverter x:Key="ImageToSourceConverter" x:Name="ImageToSourceConverter"/>
		<LinearGradientBrush x:Key="RedGradient" EndPoint="0.5,1" StartPoint="0.5,0">
			<GradientStop Color="#dd2020" Offset="0"/>
			<GradientStop Color="#dd2020" Offset="0.6"/>
			<GradientStop Color="#b01a1a" Offset="1"/>
		</LinearGradientBrush>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- title -->
        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <Grid>
                <DockPanel Grid.Row="0" Margin="15,15,15,0" HorizontalAlignment="Stretch">
                    <Button Name="LogoMenu" Visibility="{Binding LogoVisibility}" Focusable="True">
                        <Button.FocusVisualStyle>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle StrokeThickness="1" Stroke="{Binding ForegroundBrush}" SnapsToDevicePixels="true">
                                                <Rectangle.Effect>
                                                    <DropShadowEffect ShadowDepth="1" Direction="315" Color="Black" Opacity="0.9" BlurRadius="2" />
                                                </Rectangle.Effect>
                                            </Rectangle>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.FocusVisualStyle>
                        <Button.Template>
                            <ControlTemplate>
                                <Image HorizontalAlignment="Left" VerticalAlignment="Top" Width="45">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Setter Property="Source" Value="pack://application:,,,/LaunchBox;component/WpfResources/Logo.png" />
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Source" Value="pack://application:,,,/LaunchBox;component/WpfResources/LogoHover.png"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
					<!-- title for "all games" etc -->
                    <Label Name="Title" Foreground="{StaticResource RedGradient}" FontWeight="Bold" FontSize="30" Margin="0,-8,0,0" />
                </DockPanel>
            </Grid>
        </StackPanel>

		<!-- no results -->
        <Label Grid.Row="1" Visibility="{Binding NoResultsVisibility}" Foreground="#0d0c0c" Background="transparent" FontSize="20" Margin="0">
            <TextBlock Text="{Binding NoResultsLabel}" Margin="15" />
        </Label>

        <!-- games -->
        <ListView Grid.Row="1" Visibility="{Binding CollectionVisibility}" x:Name="Items" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
            ScrollViewer.VerticalScrollBarVisibility="{Binding ScrollBarVisibility}" BorderThickness="0" SelectionMode="Extended"
            FocusVisualStyle="{x:Null}" ScrollViewer.PanningMode="VerticalOnly"
            cal:Message.Attach="
                [Event SelectionChanged] = [Action OnSelectionChanged($source, $eventArgs)];
                [Event PreviewMouseRightButtonUp] = [Action OnRightClick($eventArgs)];">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="15 0 15 0">

						<!-- <TextBlock Grid.Column="0" Grid.Row="0" Text="{Binding ItemHeight}" TextAlignment="Center" Foreground="yellow" Panel.ZIndex="999" >
							<TextBlock.Effect>
								<DropShadowEffect Color="black" BlurRadius="6" ShadowDepth="6"/>
							</TextBlock.Effect>
						</TextBlock> -->

                        <Grid HorizontalAlignment="Stretch">
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Top" Visibility="{Binding BoxVisibility}">
                                <Grid x:Name="BaseGrid" ToolTip="{Binding Title}" ToolTipService.VerticalOffset="0" ToolTipService.HorizontalOffset="0"
                                    ToolTipService.Placement="Center" ToolTipService.InitialShowDelay="1500">
                                    <Grid.Effect>
                                        <DropShadowEffect BlurRadius="3" Opacity="{Binding DropShadowOpacity}" ShadowDepth="3" RenderingBias="Performance" />
                                    </Grid.Effect>

                                    <Border CornerRadius="4" BorderThickness="3" Width="Auto" Height="Auto" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Grid>
                                            <Border x:Name="ImageBorder" CornerRadius="2">
                                                <!-- game title -->
                                                <Border x:Name="ImageTextBorder" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Background="#b30d0c0c"
                                                    Visibility="Collapsed" CornerRadius="0,0,2,2">
                                                    <TextBlock x:Name="ImageText" Text="{Binding Title}" Foreground="{Binding ForegroundBrush}"
                                                        Padding="7,5,7,5" TextWrapping="Wrap" FontSize="12" FontWeight="SemiBold" />
                                                </Border>
                                            </Border>

                                            <Border x:Name="TextOnlyBorder" CornerRadius="4" Background="#a5a2a2" Visibility="{Binding BoxTextOnlyVisibility}">
												<TextBlock x:Name="GameTitle" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding Title}" TextWrapping="Wrap" FontSize="14"
													Margin="10" TextAlignment="Center" TextTrimming="WordEllipsis">
													<TextBlock.Style>
														<Style>
															<Setter Property="TextBlock.Foreground" Value="#0d0c0c" />
															<Style.Triggers>
																<DataTrigger Binding="{Binding IsSelected}" Value="True">
																	<Setter Property="TextBlock.Foreground" Value="#ffffff" />
																</DataTrigger>
																<!-- <MultiDataTrigger>
																	<MultiDataTrigger.Conditions>
																		<Condition Binding="{Binding BoxTextOnlyVisibility}" Value="Visible" />
																		<Condition Binding="{Binding IsSelected}" Value="True" />
																	</MultiDataTrigger.Conditions>
																	<Setter Property="TextBlock.Foreground" Value="#ffffff" />
																</MultiDataTrigger> -->
															</Style.Triggers>
														</Style>
													</TextBlock.Style>
												</TextBlock>
                                            </Border>
                                        </Grid>
                                        <!-- bg/border behind game -->
                                        <Border.Style>
                                            <Style>
                                                <Setter Property="Border.BorderBrush" Value="Transparent" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                        <Setter Property="Border.BorderBrush" Value="#dd2020" />
                                                    </DataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsSelected}" Value="True" />
                                                            <Condition Binding="{Binding BoxTextOnlyVisibility}" Value="Collapsed" />
                                                        </MultiDataTrigger.Conditions>
														<!-- <Setter TargetName="GameTitle" Property="Foreground" Value="#ffffff" /> -->
                                                        <Setter Property="Border.Background">
															<Setter.Value>
																<LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
																	<GradientStop Color="#c71d1d"/>
																	<GradientStop Color="#dd2020" Offset="1"/>
																</LinearGradientBrush>
															</Setter.Value>
														</Setter>
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                    </Border>

                                    <Border x:Name="Highlight" CornerRadius="4" Background="#18FFFFFF" Visibility="Collapsed"
                                        Width="{Binding Path=ActualWidth, ElementName=ImageBorder}" Height="{Binding ActualHeight, ElementName=ImageBorder}">
                                        <Border.OpacityMask>
                                            <VisualBrush Visual="{Binding ElementName=ImageBorder}" />
                                        </Border.OpacityMask>
                                    </Border>
									
									<!-- information, zoom icons that show on hover -->
                                    <Grid x:Name="HoverIconsGrid" Background="Transparent" Visibility="{Binding HoverIconsVisibility}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="33*" MinHeight="90" />
                                            <RowDefinition Height="67*" />
                                        </Grid.RowDefinitions>
                                        <Grid Grid.Row="0" Background="Transparent" cal:Message.Attach="[Event MouseEnter] = [Action OnIconsMouseEnter()];" Margin="5">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="50*" />
                                                <RowDefinition Height="50*" />
                                            </Grid.RowDefinitions>
                                            <Grid Grid.Row="0" Background="#55000000">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="25*" />
                                                    <ColumnDefinition Width="25*" />
                                                    <ColumnDefinition Width="25*" />
                                                    <ColumnDefinition Width="25*" />
                                                </Grid.ColumnDefinitions>
                                                <Button x:Name="Details" Grid.Column="0" Margin="{Binding ButtonMargin}"
                                                    cal:Message.Attach="[Event Click] = [Action Details()];">
                                                    <Button.Template>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Image x:Name="DetailsImage" RenderOptions.BitmapScalingMode="HighQuality" Stretch="Uniform"
                                                                HorizontalAlignment="Center"
                                                                Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}">
                                                                <Image.Style>
                                                                    <Style TargetType="{x:Type Image}">
                                                                        <Setter Property="Source" Value="pack://application:,,,/WpfResources/NewDetails.png" />
                                                                        <Style.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Source" Value="pack://application:,,,/WpfResources/NewDetailsHover.png" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Opacity" Value="0.5" />
                                                                            </Trigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Image.Style>
                                                            </Image>
                                                        </ControlTemplate>
                                                    </Button.Template>
                                                </Button>
                                                <Button x:Name="Zoom" Grid.Column="1" Margin="{Binding ButtonMargin}" IsEnabled="{Binding ZoomEnabled}"
                                                    cal:Message.Attach="[Event Click] = [Action Zoom()];">
                                                    <Button.Template>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Image RenderOptions.BitmapScalingMode="HighQuality" Stretch="Uniform" HorizontalAlignment="Center"
                                                                Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}"
                                                                IsEnabled="{Binding ZoomEnabled}">
                                                                <Image.Style>
                                                                    <Style TargetType="{x:Type Image}">
                                                                        <Setter Property="Source" Value="pack://application:,,,/WpfResources/NewZoom.png" />
                                                                        <Style.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Source" Value="pack://application:,,,/WpfResources/NewZoomHover.png" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Opacity" Value="0.5" />
                                                                            </Trigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Image.Style>
                                                            </Image>
                                                        </ControlTemplate>
                                                    </Button.Template>
                                                </Button>
                                                <Button x:Name="Flip" Grid.Column="2" Margin="{Binding ButtonMargin}" IsEnabled="{Binding FlipEnabled}"
                                                    cal:Message.Attach="[Event Click] = [Action Flip()];">
                                                    <Button.Template>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Image RenderOptions.BitmapScalingMode="HighQuality" Stretch="Uniform" HorizontalAlignment="Center"
                                                                Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}"
                                                                IsEnabled="{Binding FlipEnabled}">
                                                                <Image.Style>
                                                                    <Style TargetType="{x:Type Image}">
                                                                        <Setter Property="Source" Value="pack://application:,,,/WpfResources/NewFlip.png" />
                                                                        <Style.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Source" Value="pack://application:,,,/WpfResources/NewFlipHover.png" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Opacity" Value="0.5" />
                                                                            </Trigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Image.Style>
                                                            </Image>
                                                        </ControlTemplate>
                                                    </Button.Template>
                                                </Button>
                                                <Button x:Name="PlayMusic" Grid.Column="3" Margin="{Binding ButtonMargin}" IsEnabled="{Binding PlayMusicEnabled}"
                                                    cal:Message.Attach="[Event Click] = [Action PlayMusic()];">
                                                    <Button.Template>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Image RenderOptions.BitmapScalingMode="HighQuality" Stretch="Uniform" HorizontalAlignment="Center"
                                                                Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}"
                                                                IsEnabled="{Binding PlayMusicEnabled}">
                                                                <Image.Style>
                                                                    <Style TargetType="{x:Type Image}">
                                                                        <Setter Property="Source" Value="pack://application:,,,/WpfResources/NewMusic.png" />
                                                                        <Style.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Source" Value="pack://application:,,,/WpfResources/NewPlayMusicHover.png" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Opacity" Value="0.5" />
                                                                            </Trigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Image.Style>
                                                            </Image>
                                                        </ControlTemplate>
                                                    </Button.Template>
                                                </Button>
                                            </Grid>
                                            <Grid.Style>
                                                <Style>
                                                    <Setter Property="Grid.Opacity" Value="0" />
                                                    <Style.Triggers>
                                                        <Trigger Property="Grid.IsMouseOver" Value="True">
                                                            <Setter Property="Grid.Opacity" Value="1.0" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Grid.Style>
                                        </Grid>
                                    </Grid>
                                </Grid>
                            </Grid>

							<!-- shows when "arrange by" set to certain things -->
                            <Border Background="transparent" HorizontalAlignment="Stretch" VerticalAlignment="Top" Visibility="{Binding SeparatorVisibility}" Padding="8" BorderThickness="0 0 0 2" BorderBrush="#a5a2a2">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding SortType}" FontWeight="SemiBold" Foreground="#0d0c0c" FontSize="14" />
                                    <TextBlock Text=": " Foreground="#0d0c0c" FontSize="14" />
                                    <TextBlock Text="{Binding SortValue}" Width="1000" Foreground="#0d0c0c" FontSize="14" />
                                </StackPanel>
                            </Border>
                        </Grid>
                        <!-- badges -->
                        <ListView ItemsSource="{Binding Badges}" Background="Transparent" BorderThickness="0" VerticalAlignment="Top"
                            HorizontalAlignment="Right" Margin="-21,2,-21,0" Visibility="{Binding BoxVisibility}">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Image x:Name="BadgeImage" Source="{Binding Path=Icon, Converter={StaticResource ImageToSourceConverter}, Mode=OneTime}"
                                        Width="20" Margin="0,0,0,5" RenderOptions.BitmapScalingMode="HighQuality" ToolTip="{Binding Name, Mode=OneTime}" />
                                </DataTemplate>
                            </ListView.ItemTemplate>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
            						<!-- <Setter Property="MinHeight" Value="100" /> -->
                                    <Setter Property="SnapsToDevicePixels" Value="True" />
                                    <Setter Property="Margin" Value="0" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="Stretch" VerticalAlignment="Top"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                    </Grid>
					
                    <DataTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Highlight" Property="Visibility" Value="Visible" />
                            <Setter TargetName="TextOnlyBorder" Property="Background" Value="#dd2020" />
                            <Setter TargetName="GameTitle" Property="Foreground" Value="#ffffff" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                            <Setter TargetName="BaseGrid" Property="ToolTipService.IsEnabled" Value="False" />
                            <Setter TargetName="TextOnlyBorder" Property="Background" Value="#dd2020" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding BoxTextOnlyVisibility}" Value="Visible">
                            <Setter TargetName="BaseGrid" Property="ToolTipService.IsEnabled" Value="False" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected}" Value="True" />
                                <Condition Binding="{Binding BoxTextOnlyVisibility}" Value="Collapsed" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ImageTextBorder" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ImageTextBorderVisibility}" Value="Visible" />
                                <Condition Binding="{Binding BoxTextOnlyVisibility}" Value="Collapsed" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ImageTextBorder" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ListView.ItemTemplate>

            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="SnapsToDevicePixels" Value="True" />
                    <!-- <Setter Property="Margin" Value="0" /> -->
                    <!-- <Setter Property="Padding" Value="0" /> -->
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Border SnapsToDevicePixels="True" Margin="{Binding FocusVisualStyleMargin}" 
                                                VerticalAlignment="{Binding FocusVisualStyleVerticalAlignment}" Height="{Binding FocusVisualStyleHeight}"
                                                HorizontalAlignment="Stretch" BorderBrush="{Binding ForegroundBrush}" BorderThickness="1" CornerRadius="4"  />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="Stretch" VerticalAlignment="Top" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSeparator}" Value="True">
                            <Setter Property="IsHitTestVisible" Value="False" />
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <next:VirtualizingTilePanel x:Name="VirtualizingTilePanel" Margin="0,0,20,0" VirtualizingPanel.ScrollUnit="Pixel" ChildSize="{Binding BoxChildSize}" cal:Message.Attach="[Event Loaded] = [Action OnVirtualizingTilePanelLoaded($source, $eventArgs)]" />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>

            <ListView.Resources>
                <Style TargetType="ScrollBar">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ScrollBar">
                                <Track Name="PART_Track" IsDirectionReversed="true" Margin="10,0,0,0" ViewportSize="4">
                                    <Track.Resources>
                                        <system:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">120</system:Double>
                                    </Track.Resources>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Name="DecreaseRepeatButton" Command="ScrollBar.PageUpCommand"
                                                      Background="{Binding ControlsBackgroundBrush}">
                                            <RepeatButton.Template>
                                                <ControlTemplate TargetType="RepeatButton">
                                                    <Grid>
                                                        <Border Name="Border" Background="#00000000" BorderThickness="0" />
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="Border" Property="Background" Value="#22FFFFFF" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </RepeatButton.Template>
                                        </RepeatButton>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Name="IncreaseRepeatButton" Command="ScrollBar.PageDownCommand"
                                            Background="{Binding ControlsBackgroundBrush}">
                                            <RepeatButton.Template>
                                                <ControlTemplate TargetType="RepeatButton">
                                                    <Grid>
                                                        <Border Name="Border" Background="#00000000" />
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="Border" Property="Background" Value="#22FFFFFF" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </RepeatButton.Template>
                                        </RepeatButton>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb>
                                            <Thumb.Template>
                                                <ControlTemplate TargetType="Thumb">
                                                    <Border Name="Border" Background="{Binding FadedForegroundBrush}" BorderThickness="0">
                                                        <Border.Effect>
                                                            <DropShadowEffect ShadowDepth="1" Direction="315" Color="Black" Opacity="0.65" BlurRadius="4" />
                                                        </Border.Effect>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="Border" Property="Background" Value="#99FFFFFF" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Thumb.Template>
                                        </Thumb>
                                    </Track.Thumb>
                                </Track>
                                <ControlTemplate.Triggers>
                                    <Trigger SourceName="PART_Track" Property="IsEnabled" Value="false">
                                        <Setter TargetName="PART_Track" Property="Visibility" Value="Hidden"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.Resources>

            <ListView.Template>
                <ControlTemplate TargetType="ListView">
                    <Border Name="Border" BorderThickness="0" Margin="0 10 0 0">
                        <ScrollViewer IsDeferredScrollingEnabled="{Binding UseDeferredScrolling}">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Border Background="{TemplateBinding Background}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="22" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}"
                                                CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}"
                                                Content="{TemplateBinding Content}" Grid.Column="0" />
                                            <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow"
                                                Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0"
                                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                ViewportSize="{TemplateBinding ViewportHeight}" HorizontalAlignment="Right" />
                                            <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow"
                                                Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="0"
                                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                ViewportSize="{TemplateBinding ViewportWidth}" />
                                        </Grid>
                                    </Border>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </ListView.Template>
			
        </ListView>
    </Grid>
</UserControl>